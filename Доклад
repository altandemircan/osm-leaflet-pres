-- слайд с заголовком

OpenStreetMap Front-end

-- слайд с перечислением основным карточников

Для создания интерактивных карт в браузере используются разнородные инструменты.
Всем известные
Яндекс.Карты
2ГИС
Google Maps
Есть и другие.
Эти содержат в себе всё необходимое: и картографические данные, и их графическое представление, и базу геоданных для поиска, и тайловый сервер, и сервер для геопоиска, и маршрутизатор и т. д. И клиентскую библиотеку.

-- OSM — геоданные

OSM — по сути только геоданные. Как сказал Ваня, для "частного" применения нужно ставить различные элементы инфраструктуры, в зависимости от необходимостей. Для реализации фронтэндной части у них нет своего инструмента. Предлагается использовать различные доступные на рынке сторонние JSные библиотеки. Их довольно много. Иногда они даже входят в состав графиковых библиотек или являются "компаньонами", например, Highmaps из компании Highcharts или amCharts.

-- слайд с лого Leaflet и OpenLayers

Но самые распространённые библиотеки для этих целей — это Leaflet и OpenLayers. Обе открытые и бесплатные.
http://leafletjs.com
http://openlayers.org

-- слайд со сравнением

+/-
Leaflet
Более дружелюбная к непрофессионалам
Стремится быть легковесной, фокусируется на базовой функциональности, making the basic things work perfectly
Классов/неймспейсов: 52
127/224 кБ, можно ещё потрясти дерево, плагины увеличивают вес
Много (сотни) плагинов
Легко интегрируется с разработческими инструментами (гулп, грунт, ангулярные, реактовые CLI)
Использует фабрики объектов
Ближе к "нативно вебным" объектам
Мало туториалов/примеров, но они работают
Краткая и понятная документация АПИ, но в целом её меньше
Проблемы с поворотом координат и с прикручиванием 3D
Поддерживает IE7
OL
Скорее требует разработчика, сведущего в системах координат
Содержит максимум функциональности
Классов/неймспейсов: 163
465/3500 кБ, но можно оставить только нужное
Мало плагинов
Заточена на использование Google Closure Compiler
Использует new
Ближе к "большим" ГИСам
Много туториалов/примеров, но не всё работает
Пространная документация АПИ, её больше
Нет проблем с поворотом, но с 3D тоже не очень хорошо
Не поддерживает IE8

-- OSM использует лифлет

Почитав на эту тему и увидев, что карта на сайте самого OSMа использует Leaflet, решил делать демку на нём.

-- инициализация карты

Достаточно:
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css">
<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
<div id="mapid" style="height: 300px;"></div>
<script>
    var map = L.map('mapid').setView([55.033362, 82.904828], 13);
</script>
Будет показана карта. Но без тайлов.

-- добавление слоя тайлов

Добавить слой тайлов:
L.tileLayer('//gis.emdev.ru/osm_tiles/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
    maxZoom: 18
}).addTo(map);
Рассказать про структуру урла, что можно и другие штуки подставлять (например, id, accessToken).
Что яндексовые тайлы не подходят.
Можно использовать WMS (Web Map Service Interface Standard) и TMS (Tile Map Service).

-- слайд с картинкой переключателя слоёв

Штатный контрол для управления слоями:
L.control.layers(baseMaps, overlayMaps).addTo(map);

-- добавление маркера

Добавить маркер:
var marker = L.marker([55.033362, 82.904828]).addTo(map);

-- добавление круга

Добавить круг:
var circle = L.circle([55.033462, 82.904928], {
    color: 'red',
    fillColor: '#f03',
    fillOpacity: 0.5,
    radius: 500
}).addTo(map);

-- добавление многоугольника

Добавить многоугольник:
var polygon = L.polygon([
    [55.033662, 82.905928],
    [55.033682, 82.906928],
    [55.034662, 82.909928],
]).addTo(map);

-- слайд с балуном

Приделать к объектам балуны:
marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();
circle.bindPopup("I am a circle.");
polygon.bindPopup("I am a polygon.");

-- про чейнинг

Используется чейнинг:
var popup = L.popup()
    .setLatLng([51.5, -0.09])
    .setContent("I am a standalone popup.")
    .openOn(mymap);

-- события

Событие клика на карте:
map.on('click', function (e) {
    popup
        .setLatLng(e.latlng)
        .setContent("You clicked the map at " + e.latlng)
        .openOn(map);
});

-- кастомизация маркера

Там выше добавлял маркер без кастомизации. Можно передать при создании различные опции (прозрачность, таскабельности и др.) И иконку.

Кастомные иконки для маркеров:
var greenIcon = L.icon({
    iconUrl: 'leaf-green.png',
    shadowUrl: 'leaf-shadow.png',
    iconSize:     [38, 95],
    shadowSize:   [50, 64],
    iconAnchor:   [22, 94],
    shadowAnchor: [4, 62],
    popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
});
L.marker([51.5, -0.09], {icon: greenIcon}).addTo(map);

-- GeoJSON

Использование GeoJSON (a geometry, a feature, or a collection of features, точки, линии, многоугольники, информация об объектам).

var geojsonFeature = {
    "type": "Feature",
    "properties": {
        "name": "Coors Field",
        "amenity": "Baseball Stadium",
        "popupContent": "This is where the Rockies play!"
    },
    "geometry": {
        "type": "Point",
        "coordinates": [-104.99404, 39.75621]
    }
};
GeoJSON layer:
L.geoJSON(geojsonFeature).addTo(map);
Можно указывать стиль: цвет, толщину линий, паттерн штрихов, прозрачность.

-- ООП

Для расширения (создания своих маркеров, контролов, слоёв) применяется методы L.Class.extend(), L.Class.include().

Пример:
L.TileLayer.Kitten = L.TileLayer.extend({
    getTileUrl: function(coords) {
        var i = Math.ceil( Math.random() * 4 );
        return "http://placekitten.com/256/256?image=" + i;
    },
    getAttribution: function() {
        return "<a href='http://placekitten.com/attribution.html'>PlaceKitten</a>"
    }
});
Фабрика по конвенции:
L.tileLayer.kitten = function() {
    return new L.TileLayer.Kitten();
}
Использование:
L.tileLayer.kitten().addTo(map);

-- основные классы

Основные группы классов:
L.Map
L.Control (управлятор слоями, масштаб, зумер)
L.CRS
L.Layer (балун, тултип, L.Rectangle, L.Circle, L.TileLayer, L.Marker)
L.LatLng
L.Icon
Утилитные классы

-- плагины

Большой каталог плагинов http://leafletjs.com/plugins.html:
предоставляют простой доступ к различным тайловым слоям (различных провайдеров, различного устройства)
для накладывания эффектов на слои
для показа огромных фотографий
для накладывания изображений с искажениями
для кэширования слоёв
для комбинирования слоёв
накладывание объектов в различных форматах
автообновляемые объекты
AJAX-активные объекты
сетка координат
терминатор
текст по полилиниям
различные формы
иконки, векторные и растровые, с использованием иконочных шрифтов
3D-здания на карте
показ геотегированных фотографий
анимация маркеров вдоль линий
кластеризация маркеров
хитмапы
редактирование объектов на карте
добавление временно-ориентированных возможностей
высоты
поисковые контролы
группа плагинов для переключения слоёв
альтернативные контролы зума и панорамирования
букмаркирование уровней зума, положений на карте
фуллскрин
PiP, миникарты
измерители длин, площадей
показ координат в различных форматах
показ погоды
диалоги
сообщения
возможность печати
шаринг расположения
работа с экзотическими проекциями
маршрутизация

-- кластеры

-- дема
